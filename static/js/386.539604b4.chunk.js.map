{"version":3,"file":"static/js/386.539604b4.chunk.js","mappings":"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","sources":["components/Dialogs/Dialog/Style.js","components/Dialogs/Dialog/Dialog.jsx","components/Dialogs/Message/Style.js","components/Dialogs/Message/Message.jsx","components/common/FormControls/Teaxtarea/Style.js","components/common/FormControls/Teaxtarea/Textarea.jsx","components/Dialogs/MessageForm/Style.js","components/Dialogs/MessageForm/MessageForm.jsx","components/Dialogs/Style.js","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ActiveContent = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 70px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    background-color: #695CFE;\r\n    color: white;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    margin: 0px 0px 5px 0px;\r\n    border-radius: 10px;\r\n`;\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 70px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    background-color: ${props=>props.theme.iconColor};\r\n    box-shadow: 0px 0px 3px ${props=>props.theme.shadowColor};\r\n    color: ${props=>props.theme.textColor};\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    margin: 0px 0px 5px 0px;\r\n    border-radius: 10px;\r\n    transition: 0.1s;\r\n    &:hover{\r\n        background-color: ${props=>props.theme.accentColor1};\r\n        color: white;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 50px;\r\n    height: 50px;\r\n \r\n    overflow: hidden;\r\n    position: relative;\r\n    border-radius: 10px;\r\n    & img{       \r\n        width: 50px;\r\n        height: 50px;\r\n        position: absolute;\r\n        \r\n    }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n    display: flex;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    margin: 0px 0px 0px 10px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\nexport const Name = styled.div`\r\n    font-family: 'Roboto';\r\n    font-size: 14px;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n`;\r\nexport const Text = styled.div`\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NavLink, useLocation } from 'react-router-dom';\r\nimport * as Style from './Style';\r\n\r\nconst Dialog = ({ id, name, message, url }) => {\r\n    const location = useLocation();\r\n\r\n    if (location.pathname === '/messages/' + id) {\r\n        return (\r\n            <NavLink to={'/messages/' + id}>\r\n                <Style.ActiveContent>\r\n                    <Style.Image>\r\n                        <img src='https://i.pinimg.com/564x/6e/f6/4b/6ef64b7417991febef4183091301b245.jpg' alt={`image${id}`}></img>\r\n                    </Style.Image>\r\n                    <Style.Info>\r\n                        <Style.Name>{name}</Style.Name>\r\n                        <Style.Text>{message}</Style.Text>\r\n                    </Style.Info>\r\n                </Style.ActiveContent>\r\n            </NavLink>\r\n        );\r\n    } else {\r\n        return (\r\n            <NavLink to={'/messages/' + id}>\r\n                <Style.Content>\r\n                    <Style.Image>\r\n                        <img src='https://i.pinimg.com/564x/6e/f6/4b/6ef64b7417991febef4183091301b245.jpg' alt={`image${id}`}></img>\r\n                    </Style.Image>\r\n                    <Style.Info>\r\n                        <Style.Name>{name}</Style.Name>\r\n                        <Style.Text>{message}</Style.Text>\r\n                    </Style.Info>\r\n                </Style.Content>\r\n            </NavLink>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dialog;","import styled from 'styled-components';\r\n\r\nexport const Message = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    word-wrap: break-word;\r\n    word-break: break-all;\r\n    min-width: 320px;\r\n\r\n    color: ${props=>props.theme.textColor};\r\n    box-sizing: border-box; \r\n    padding: 10px;\r\n    margin-bottom: 5px;\r\n\r\n    &:last-child{\r\n        margin: 0px;\r\n    } \r\n    &:hover{\r\n        background-color: #695CFE;\r\n        transition: 0.1s;\r\n        color: white;\r\n    }\r\n    border-radius: 10px;\r\n`;\r\nexport const Image = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 50px;\r\n    height: 50px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    border-radius: 10px;\r\n\r\n    & img{\r\n        position: absolute;\r\n        width: 50px;\r\n        height: 50px;\r\n        object-fit: cover;\r\n    }\r\n`;\r\nexport const Data = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    overflow: hidden;\r\n    width: 100%;\r\n    height: 100%;\r\n \r\n\r\n    \r\n    flex-direction: column;\r\n    \r\n    margin: 0px 0px 0px 10px;\r\n    /* background-color: aqua; */\r\n`;\r\nexport const Meta = styled.div`\r\ndisplay: flex;\r\nflex: 0 0 auto;\r\nflex-direction: row;\r\nalign-items: flex-end;\r\n\r\n\r\n/* background-color: red; */\r\nmargin: 0px 0px 5px 0px;\r\n`;\r\nexport const Name = styled.div`\r\ndisplay: flex;\r\nflex: 0 0 auto;\r\n    font-size: 14px;\r\n    margin-right: 10px;\r\n    color: inherit;\r\n\r\n`;\r\nexport const Text = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    \r\n    width: 100%;\r\n    overflow: hidden;\r\n    font-size: 12px;\r\n    /* word-wrap: break-word; */\r\n    color: inherit;\r\n`;\r\nexport const Time = styled.div`\r\n\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 50px;\r\n    color: inherit;\r\n    font-size: 12px;\r\n    margin-right: 20px;\r\n    \r\n\r\n \r\n`;\r\n","import * as Style from './Style'\r\n\r\nconst Message = ({ name, text, time, type }) => {\r\n    return (\r\n        <Style.Message>\r\n            <Style.Image> \r\n                <img src='https://i.pinimg.com/564x/6e/f6/4b/6ef64b7417991febef4183091301b245.jpg'></img>\r\n            </Style.Image>\r\n            <Style.Data>\r\n                <Style.Meta>\r\n                    <Style.Name>{name}</Style.Name>\r\n                    <Style.Time>{time}</Style.Time>\r\n                </Style.Meta>\r\n                <Style.Text>{text}</Style.Text>\r\n            </Style.Data>\r\n        </Style.Message>\r\n    );\r\n}\r\n\r\nexport default Message;","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`    \r\n    display: flex;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: column;\r\n    border-radius: 15px;\r\n`;\r\n\r\nexport const Textarea = styled.textarea`\r\n    display: flex;\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 15px;\r\n    flex: 1 1 auto;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n    margin: 0px 5px 0px 0px;\r\n    font-size: 14px;\r\n    font-family: 'Roboto';\r\n    resize: none;\r\n    padding: 13px;\r\n    box-sizing: border-box;\r\n    background-color: ${props=>props.theme.iconColor};\r\n    border: 0px;\r\n    color: ${props=>props.theme.textColor};\r\n    &:focus{\r\n        outline: 0px;\r\n        border: 0px;\r\n    }\r\n    &::-webkit-scrollbar\r\n    {\r\n        background-color: rgba(0, 0, 0, 0.1);\r\n        width: 10px;\r\n        overflow: hidden;\r\n    }\r\n    &::-webkit-scrollbar-thumb\r\n    {\r\n        background-color: #695CFE;\r\n        border-radius: 10px;\r\n    }\r\n`;\r\n\r\nexport const Error = styled.span`    \r\n    font-size: 12px;\r\n    font-weight: 500;\r\n    display: flex;\r\n    position: absolute;\r\n    bottom: 10px;\r\n    background-color: red;\r\n    right: 30px;\r\n    border-radius: 5px;\r\n    padding: 2px 10px;\r\n    color: white;\r\n`;","import React from \"react\";\r\nimport * as Style from './Style';\r\n\r\nconst Textarea = ({ input, meta, ...props }) => {\r\n    if (meta.error && meta.touched) {\r\n        return (\r\n            <Style.Content>\r\n                <Style.Textarea {...input} {...props} />\r\n                <Style.Error>{meta.error}</Style.Error>\r\n            </Style.Content>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <Style.Content>\r\n                <Style.Textarea {...input} {...props} />\r\n            </Style.Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Textarea;","import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    flex-direction: row;\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    align-items: center;\r\n`;\r\n\r\nexport const Button= styled.button`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50px;\r\n    height: 100%;\r\n    font-size: 30px;\r\n    background-color: inherit;\r\n    margin: 0px 15px;\r\n    border-radius: 10px;\r\n    border: 0;\r\n    color: ${props=>props.theme.textColor};\r\n    cursor: pointer;\r\n    font-family: 'Roboto';\r\n    font-weight: 500;\r\n    &:hover{\r\n    transition: 0.1s;\r\n    color: ${props=>props.theme.accentColor1};\r\n    }\r\n`;","\r\nimport React from 'react';\r\nimport { Form, Field } from 'react-final-form';\r\nimport { required, maxLengthCreator, composeValidators } from '../../../utils/validators/validators';\r\nimport Textarea from '../../common/FormControls/Teaxtarea/Textarea';\r\nimport * as Style from './Style';\r\nimport {VscPlay} from 'react-icons/vsc';\r\n\r\nconst MessageForm = (props) => {\r\n    let onSubmit = (values) => {\r\n        props.addMessage(values.newMessage);\r\n        values.newMessage = '';\r\n    }\r\n    let validate = values => {\r\n        console.log(values);\r\n    }\r\n    \r\n    return (\r\n        <Form\r\n            onSubmit={onSubmit}\r\n            validate={validate}\r\n            render={({ handleSubmit }) => (\r\n                <Style.Form onSubmit={handleSubmit}>\r\n                    <Field validate={composeValidators(required, maxLengthCreator(100))} name=\"newMessage\" placeholder='Сообщение'  component={Textarea}></Field>\r\n                    <Style.Button><VscPlay></VscPlay></Style.Button>\r\n                </Style.Form>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default MessageForm;","import styled from \"styled-components\";\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: ${props=>props.height}px;\r\n    flex-direction: row;\r\n    background-color: ${props=>props.theme.backgroundColor};\r\n    transition: 0.1s;\r\n`;\r\n\r\nexport const Dialogs = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 320px;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 15px 0px;\r\n`;\r\n\r\nexport const DialogsName = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 50px;\r\n    padding: 0px 15px;\r\n    align-items: center;\r\n    font-size: 25px;\r\n    color: ${props=>props.theme.textColor};\r\n`;\r\n\r\nexport const DialogsList = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    padding: 1px 15px;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    margin-top: 10px;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n        height :0 ;\r\n    }\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 15px;\r\n`;\r\n\r\nexport const MessagesName = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 50px;\r\n    align-items: center;\r\n    font-size: 25px;\r\n    color: ${props=>props.theme.textColor};\r\n`;\r\n\r\nexport const MessagesList = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    margin-top: 10px;\r\n    overflow: scroll;\r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n        height :0 ;\r\n    }\r\n`;\r\n\r\nexport const Form = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 10%;\r\n    margin-top: 15px;\r\n    box-shadow: 0px 0px 3px ${props=>props.theme.shadowColor};\r\n    background-color: ${props=>props.theme.iconColor};\r\n    border-radius: 10px;\r\n    flex-direction: row;\r\n`;","import Dialog from './Dialog/Dialog';\r\nimport Message from './Message/Message';\r\nimport MessageForm from './MessageForm/MessageForm';\r\nimport React from 'react';\r\nimport * as Style from './Style';\r\n\r\nconst Dialogs = ({ dialogs, messages, addMessage, height, width }) => {\r\n    let dialogsElements = dialogs.map(element => {\r\n        return <Dialog key={`dialog${element.id}`} id={element.id} name={element.name} message={element.message}></Dialog>;\r\n    });\r\n\r\n    let messagesElements = messages.map(element => {\r\n        return <Message key={`message${element.id}`} name={element.name} text={element.text} time={element.time}></Message>;\r\n    });\r\n\r\n    return (\r\n        <Style.Content height={height}>\r\n            <Style.Dialogs height={height}>\r\n                <Style.DialogsName>\r\n                    Чаты\r\n                </Style.DialogsName>\r\n                <Style.DialogsList height={height}>\r\n                    {dialogsElements}\r\n                </Style.DialogsList>\r\n            </Style.Dialogs>\r\n            <Style.Messages>\r\n                <Style.MessagesName>\r\n                \r\n                </Style.MessagesName>\r\n                <Style.MessagesList>\r\n                    {messagesElements}\r\n                </Style.MessagesList>\r\n                <Style.Form>\r\n                    <MessageForm addMessage={addMessage}></MessageForm>\r\n                </Style.Form>\r\n            </Style.Messages>\r\n        </Style.Content>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport {addMessageActionCreator} from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport {compose} from 'redux'\r\nimport { useWindowSize } from '../../hooks/useWindowSize';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => {\r\n            dispatch(addMessageActionCreator(message));\r\n        }\r\n    }\r\n};\r\n\r\nconst DialogsContainer = (props)=>{\r\n    const [width, height] = useWindowSize();\r\n\r\n    return(<Dialogs {...props} height={height} width={width}/>)\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(DialogsContainer);"],"names":["ActiveContent","styled","Content","props","theme","iconColor","shadowColor","textColor","accentColor1","Image","Info","Name","Text","id","name","message","url","useLocation","pathname","to","src","alt","Message","Data","Meta","Time","text","time","type","Textarea","Error","input","meta","error","touched","Form","Button","onSubmit","values","addMessage","newMessage","validate","console","log","render","handleSubmit","composeValidators","required","maxLengthCreator","placeholder","component","height","backgroundColor","Dialogs","DialogsName","DialogsList","Messages","MessagesName","MessagesList","dialogs","messages","dialogsElements","width","map","element","messagesElements","compose","connect","state","dialogsPage","dispatch","addMessageActionCreator","withAuthRedirect","useWindowSize"],"sourceRoot":""}