{"version":3,"file":"static/js/403.080a155f.chunk.js","mappings":"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","sources":["components/Profile/ProfileStatus/Style.js","components/Profile/ProfileStatus/ProfileStatus.jsx","components/Profile/Style.js","components/Profile/Contact/Style.js","components/Profile/Contact/Contact.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Status = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex-direction: row;\r\n    bottom: 0px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n`;\r\nexport const Text = styled.div`\r\n     font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.div` \r\n    & input{\r\n        display: flex;\r\n        border: 1px solid rgba(0, 0, 0, 0.1);\r\n        border-radius: 5px;\r\n        flex: 1 1 auto;\r\n        // width: 100%;\r\n        height: 100%;\r\n        box-sizing: border-box;\r\n        margin: 0px 5px 0px 0px;\r\n        font-size: 14px;\r\n        font-family: 'Roboto';\r\n        resize: none;\r\n        padding: 13px;\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    & input:focus{\r\n        outline: 0px;\r\n    }\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport * as Style from './Style';\r\n\r\nconst ProfileStatus = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    let onClickSetEditMode = () => {\r\n        if (editMode) {\r\n            setEditMode(false);\r\n            props.updateStatusThunk(status);\r\n        } else {\r\n            setEditMode(true);\r\n        }\r\n    }\r\n\r\n    let onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    return (\r\n        <Style.Status>\r\n            <Style.Container>\r\n                {editMode === false\r\n                    ?\r\n                    props.owner ?\r\n                        <Style.Text onDoubleClick={() => onClickSetEditMode()} >\r\n                            {status}\r\n                        </Style.Text>\r\n                        :\r\n                        <Style.Text  >\r\n                            {status}\r\n                        </Style.Text>\r\n                    :\r\n\r\n                    <Style.Input onBlur={() => onClickSetEditMode()} >\r\n                        <input onChange={onChangeStatus} autoFocus={true} value={status}></input>\r\n                    </Style.Input>\r\n                }\r\n            </Style.Container>\r\n        </Style.Status>\r\n    );\r\n}\r\n\r\nexport default React.memo(ProfileStatus);","import styled from \"styled-components\";\r\n\r\nexport const Profile = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: ${props => props.height}px;\r\n    flex-direction: row;\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    color: ${props => props.theme.color}; \r\n    transition: 0.1s;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 320px;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    /* padding: 15px; */\r\n`;\r\n\r\nexport const ProfileTitle = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 100%;\r\n    height: 50px;\r\n    align-items: center;\r\n    font-size: 25px;\r\n    \r\n    color: ${props=>props.theme.textColor};\r\n    padding: 15px 15px 0px 15px;\r\n`;\r\n\r\nexport const ProfileList = styled.div`\r\n    display: flex;\r\n    flex: 1 1 auto;\r\n    width: 100%;\r\n    flex-direction: column;\r\n    box-sizing: border-box;\r\n    padding: 10px 15px 15px 15px;\r\n    overflow: scroll;\r\n   \r\n    &::-webkit-scrollbar { \r\n        width: 0;\r\n        height :0 ;\r\n    }\r\n`;\r\n\r\nexport const Image = styled.div`\r\n    & img{\r\n        display: flex;\r\n        width: 100%;\r\n        border-radius: ${props=>props.theme.borderRadius};\r\n    }\r\n`;\r\n\r\nexport const SetPhoto = styled.div`\r\n    display: flex;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n    /* height: 100%; */\r\n    margin: 10px 0px 0px 0px;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 50px;\r\n    justify-items: center;\r\n    background-color: ${props=>props.theme.accentColor1};\r\n    color: white;\r\n    transition: 0.1s ease;\r\n    position: relative;\r\n    &:hover{\r\n        opacity: 0.91;\r\n        background-color: #695CFE;\r\n        color: white;\r\n    }\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const InputText = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const InputFile = styled.input`\r\n    opacity: 0;\r\n    display: flex;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Data = styled.div`\r\n    display: flex;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n    margin: 10px 0px 0px 0px;\r\n    padding: 10px;\r\n    box-sizing: border-box;\r\n    justify-items: center;\r\n    box-shadow: 0px 0px 3px ${props=>props.theme.shadowColor};\r\n    background-color: ${props=>props.theme.iconColor};\r\n    flex-direction: column;\r\n    transition: 0.1s ease;\r\n`;\r\n\r\nexport const DataLabel = styled.div`\r\n    display: flex;\r\n    font-weight: 500;\r\n    flex: 0 0;\r\n    margin: 0px 0px 0px 0px;\r\n    font-size: ${props=>props.theme.textSizeM};\r\n    transition: 0.1s ease;\r\n`;\r\n\r\nexport const DataName = styled.div`\r\n    display: flex;\r\n    flex: 0 0;\r\n    margin: 0px 0px 10px 0px;\r\n    font-size: ${props=>props.theme.textSizeM};\r\n    transition: 0.1s ease;\r\n    &:last-child{\r\n        margin: 0px 0px 0px 0px;\r\n    }\r\n`;\r\n\r\nexport const Status = styled.div`\r\n    display: flex;\r\n    flex: 0 0;\r\n    font-size: ${props=>props.theme.textSizeM};  \r\n    transition: 0.1s ease;\r\n`;\r\n\r\nexport const Contacts = styled.div`\r\n    display: flex;\r\n    border-radius: 10px;\r\n    width: 100%;  \r\n    margin: 10px 0px 0px 0px ;\r\n    padding: 10px;\r\n    box-sizing: border-box; \r\n    justify-items: center;\r\n    box-shadow: 0px 0px 3px ${props=>props.theme.shadowColor};\r\n    background-color: ${props=>props.theme.iconColor};\r\n    flex-direction: column;\r\n    transition: 0.3s ease;\r\n`;\r\nexport const ContactsTitle = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    font-weight: 500;\r\n    font-size: ${props=>props.theme.textSizeM};  \r\n`;\r\n\r\nexport const ContactsList= styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    width: 100%;\r\n    grid-column-gap: 5px;\r\n    grid-row-gap: 5px;\r\n    margin-top: 5px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Link = styled.a`\r\n    display: flex;\r\n    width: 100%;\r\n    flex: 0 0 auto;\r\n`;\r\n\r\nexport const Contact = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    flex: 0 0 auto;\r\n    height: 50px;   \r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: ${props => props.theme.borderRadius};\r\n    box-sizing: border-box;\r\n    padding:10px;\r\n    box-shadow: 0px 0px 3px ${props => props.theme.shadowColor};\r\n    background-color: ${props => props.theme.backgroundColor};\r\n    color: ${props => props.theme.textColor};\r\n\r\n    &:hover{\r\n        background-color: ${props => props.color};\r\n        transition: 0.3s ease;\r\n        color: white;\r\n    }\r\n    cursor: pointer;\r\n`;\r\n\r\nexport const Icon = styled.div`\r\n    display: flex;\r\n    flex: 0 0 auto;\r\n    width: 30px;\r\n    height: 30px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 30px;\r\n    font-weight: 500;\r\n`;","import React from \"react\";\r\nimport * as Style from './Style';\r\n\r\nconst Contact = (props) => {\r\n    return (\r\n        <Style.Link href={props.text}>\r\n            <Style.Contact color={props.color}>\r\n                <Style.Icon>{props.icon}</Style.Icon>\r\n                {/* <Style.Text>{props.text}</Style.Text> */}\r\n            </Style.Contact>\r\n        </Style.Link>\r\n    );\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\nimport { useState } from 'react';\r\nimport * as Style from './Style';\r\nimport Contact from './Contact/Contact';\r\nimport { VscGithubInverted, VscTwitter } from \"react-icons/vsc\";\r\n\r\nconst Profile = (props) => {\r\n    let [editMode, setEditMode] = useState(true);\r\n\r\n    let onChangePhoto = (e) => {\r\n        if (e.target.files.length) {\r\n            props.setPhotoThunk(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    if (props.profile === null) {\r\n        return <Preloader></Preloader>\r\n    }\r\n    else {\r\n        let contacts = false;\r\n        for (let contact in props.profile.contacts) {\r\n            if (props.profile.contacts[contact] !== null) {\r\n                contacts = true;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Style.Profile height={props.height}>\r\n                <Style.Content height={props.height}>\r\n                    <Style.ProfileTitle>\r\n                        Профиль\r\n                    </Style.ProfileTitle>\r\n\r\n                    <Style.ProfileList height={props.height}>\r\n                        <Style.Image>\r\n                            <img key={props.photoKey} src={props.profile.photos.large || 'https://cdn-icons-png.flaticon.com/512/56/56745.png'} alt='profilePhoto'></img>\r\n                        </Style.Image>\r\n                        {editMode && props.isOwner &&\r\n                            <Style.SetPhoto>\r\n                                <Style.InputText>Добавить фото</Style.InputText>\r\n                                <Style.InputFile type='file' onChange={onChangePhoto}></Style.InputFile>\r\n                            </Style.SetPhoto>\r\n                        }\r\n\r\n                        <Style.Data>\r\n                            {props.profile.fullName ? <Style.DataLabel>Полное имя</Style.DataLabel> : ''}\r\n                            {props.profile.fullName ? <Style.DataName>{props.profile.fullName}</Style.DataName> : ''}\r\n                            {props.profile.aboutMe ? <Style.DataLabel>Описание</Style.DataLabel> : ''}\r\n                            {props.profile.aboutMe ? <Style.DataName> {props.profile.aboutMe}</Style.DataName> : ''}\r\n                            {props.status ? <Style.DataLabel>Статус</Style.DataLabel> : ''}\r\n                            {props.status ? <ProfileStatus owner={props.isOwner} status={props.status} updateStatusThunk={props.updateStatusThunk} /> : ''}\r\n                        </Style.Data>\r\n\r\n                        {contacts ? <Style.Contacts>\r\n                            <Style.ContactsTitle>Контакты</Style.ContactsTitle>\r\n                            <Style.ContactsList>\r\n                                {props.profile.contacts.github ? <Contact color={'#6e5494'} icon={<VscGithubInverted />} text={props.profile.contacts.github}></Contact> : ''}\r\n                                {props.profile.contacts.vk ? <Contact color={'#45668e'} icon={'VK'} text={props.profile.contacts.vk}></Contact> : ''}\r\n                                {props.profile.contacts.facebook ? <Contact color={'#1877f2'} icon={'FB'} text={props.profile.contacts.facebook}></Contact> : ''}\r\n                                {props.profile.contacts.instagram ? <Contact color={'#c13584'} icon={'IG'} text={props.profile.contacts.instagram}></Contact> : ''}\r\n                                {props.profile.contacts.twitter ? <Contact color={'#1da1f2'} icon={<VscTwitter />} text={props.profile.contacts.twitter}></Contact> : ''}\r\n                                {props.profile.contacts.website ? <Contact color={'#168de2'} icon={'WEB'} text={props.profile.contacts.website}></Contact> : ''}\r\n                                {props.profile.contacts.youtube ? <Contact color={'#ff0000'} icon={'YT'} text={props.profile.contacts.youtube}></Contact> : ''}\r\n                                {props.profile.contacts.mainLink ? <Contact color={'#168de2'} icon={'ML'} text={props.profile.contacts.mainLink}></Contact> : ''}\r\n                            </Style.ContactsList>\r\n                        </Style.Contacts> : ''}\r\n\r\n                    </Style.ProfileList>\r\n                </Style.Content>\r\n            </Style.Profile>\r\n\r\n        );\r\n    }\r\n};\r\n\r\nexport default Profile;\r\n\r\n{/* <Style.Top>\r\n                    <Style.Title>\r\n                    </Style.Title>\r\n                    <Style.Settings>\r\n\r\n                    </Style.Settings>\r\n                </Style.Top>\r\n                <Style.Block>\r\n                    <Style.Block>\r\n                        <Style.Image>\r\n                            <Style.ImageBlock>\r\n\r\n                            </Style.ImageBlock>\r\n\r\n                        </Style.Image>\r\n                        <Style.Contacts>\r\n                            <Style.Git></Style.Git>\r\n                            <style.Vk></style.Vk>\r\n                            <Style.Facebook></Style.Facebook>\r\n                            <Style.Instagram></Style.Instagram>\r\n                            <Style.Twitter></Style.Twitter>\r\n                            <Style.Website></Style.Website>\r\n                            <Style.YouTube></Style.YouTube>\r\n                            <Style.MainLink></Style.MainLink>\r\n                        </Style.Contacts>\r\n                    </Style.Block>\r\n\r\n\r\n\r\n\r\n                </Style.Block> */}\r\n\r\n            // <div className={stl.profile} >\r\n            //     <div top>\r\n            //         <div name></div>\r\n            //         <div settings></div>\r\n\r\n            //     </div>\r\n            //     <div className={stl.profile__content}>\r\n\r\n            //         <div className={stl.profile__profileDIV}>\r\n            //             <div className={stl.profile__profile}>\r\n            //                 <div className={stl.profile__image}>\r\n            //                     <img key={props.photoKey} src={props.profile.photos.large || 'https://cdn-icons-png.flaticon.com/512/56/56745.png'} alt='profilePhoto'></img>\r\n            //                 </div>\r\n            //                 {editMode && props.isOwner &&\r\n            //                     <div className={stl.profile__setPhoto} >\r\n            //                         Добавить фото\r\n            //                         <input type='file' onChange={onChangePhoto}></input>\r\n            //                     </div>\r\n            //                 }\r\n            //                 <div className={stl.profile__name}>\r\n            //                     {props.profile.fullName}\r\n            //                 </div>\r\n            //                 <div className={stl.profile__about}>\r\n            //                     {props.profile.aboutMe}\r\n            //                 </div>\r\n            //                 <div className={stl.profile__online}>\r\n            //                     {props.profile.aboutMe}\r\n            //                 </div>\r\n\r\n            //             </div>\r\n            //         </div>\r\n\r\n            //         <div className={stl.profile__dataDIV}>\r\n            //             <div className={stl.profile__data}>\r\n            //                 <ProfileStatus status={props.status} updateStatusThunk={props.updateStatusThunk} />\r\n            //             </div>\r\n\r\n            //             <div className={stl.profile__posts}>\r\n            //                 {postsElements}\r\n            //             </div>\r\n            //             <PostForm onPostChange={props.onPostChange} addPost={props.addPost}></PostForm>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>","import Profile from './Profile';\r\nimport { addPostActionCreator, getProfileThunkCrator, getStatusThunkCrator, updateStatusThunkCrator,setPhotoThunkCreator } from '../../redux/profile-reducer'\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useEffect } from 'react';\r\nimport { useWindowSize } from '../../hooks/useWindowSize';\r\n\r\nconst ProfileContainer = (props) => {\r\n    let params = useParams();\r\n    const [width, height] = useWindowSize();\r\n\r\n    let isOwner = false; \r\n    if(String(params.userId) === String(props.userId)) isOwner = true;\r\n\r\n    useEffect(() => {\r\n        props.getProfileThunk(params.userId);\r\n        props.getStatusThunk(params.userId);\r\n    }, [params.userId]);\r\n\r\n\r\n    return <Profile {...props} isOwner={isOwner} userId={params.userId} height={height}></Profile>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userId: state.auth.userId,\r\n        posts: state.profilePage.posts,\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        photoKey: state.profilePage.photoKey\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (post) => {\r\n            dispatch(addPostActionCreator(post))\r\n        },\r\n        getProfileThunk: (userId) => {\r\n            dispatch(getProfileThunkCrator(userId));\r\n        },\r\n        getStatusThunk: (userId) => {\r\n            dispatch(getStatusThunkCrator(userId));\r\n        },\r\n        updateStatusThunk: (status) => {\r\n            dispatch(updateStatusThunkCrator(status));\r\n        },\r\n        setPhotoThunk: (photo) => {\r\n            dispatch(setPhotoThunkCreator(photo));\r\n        }\r\n    }\r\n};\r\n\r\nexport default\r\n    compose(\r\n        connect(mapStateToProps, mapDispatchToProps),\r\n        withAuthRedirect,\r\n    )(ProfileContainer);"],"names":["Status","styled","Container","Text","Input","ProfileStatus","props","useState","editMode","setEditMode","status","setStatus","onClickSetEditMode","updateStatusThunk","useEffect","owner","onDoubleClick","onBlur","onChange","e","currentTarget","value","autoFocus","React","Profile","height","theme","backgroundColor","color","Content","ProfileTitle","textColor","ProfileList","Image","borderRadius","SetPhoto","accentColor1","InputText","InputFile","Data","shadowColor","iconColor","DataLabel","textSizeM","DataName","Contacts","ContactsTitle","ContactsList","Link","Contact","Icon","href","text","icon","profile","Preloader","contacts","contact","src","photos","large","alt","photoKey","isOwner","type","target","files","length","setPhotoThunk","fullName","aboutMe","github","vk","facebook","instagram","twitter","website","youtube","mainLink","compose","connect","state","userId","auth","posts","profilePage","dispatch","addPost","post","addPostActionCreator","getProfileThunk","getProfileThunkCrator","getStatusThunk","getStatusThunkCrator","updateStatusThunkCrator","photo","setPhotoThunkCreator","withAuthRedirect","params","useParams","useWindowSize","String"],"sourceRoot":""}